# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

custom:
  projectName: go-ffmpeg
  defaultStage: dev
  currentStage: ${opt:stage, self:custom.defaultStage}
  currentRegion: ${file(./config.${self:custom.currentStage}.json):region}
  bucket: ${file(./config.${self:custom.currentStage}.json):bucket}
  thumbnails_folder: ${file(./config.${self:custom.currentStage}.json):thumbnails_folder}
  thumbnails_path: ${self:custom.bucket}/${self:custom.thumbnails_folder}
  ecsTaskName: ${file(./config.${self:custom.currentStage}.json):ecsTaskName}
  containerOverrideName: ${file(./config.${self:custom.currentStage}.json):containerOverrideName}
  ecsTaskVpcSubnet1: ${file(./config.${self:custom.currentStage}.json):ecsTaskVpcSubnet1}
  ecsTaskVpcSubnet2: ${file(./config.${self:custom.currentStage}.json):ecsTaskVpcSubnet2}
  clusterName: ${file(./config.${self:custom.currentStage}.json):clusterName}
  # clusterArn: { "Fn::Join" : ["", [ "arn:aws:ecs:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" }, ":cluster/default" ] ] }
  # taskDefArn: { "Fn::Join" : ["", [ "arn:aws:ecs:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" }, ":task-definition/*:*" ] ] }
  execRoleArn: { "Fn::Join" : ["", [ "arn:aws:iam::", '${env:AWS_ACCOUNT}', ":role/", '${self:custom.ecsTaskExecutionRole}' ] ] }


service: go-ffmpeg
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '>=1.28.0 <2.0.0'

provider:
  tracing:
    lambda: true
  name: aws
  tags:
    PROJECT_NAME: ${self:custom.projectName}
  runtime: go1.x
  stage: ${self:custom.currentStage}
  region: ${self:custom.currentRegion}
  memorySize: 512 # will be inherited by all functions
  environment:
    ECS_CLUSTER_NAME: ${self:custom.clusterName}
    ECS_TASK_DEFINITION: ${self:custom.ecsTaskName}
    ECS_CONTAINER_OVERRIDE_NAME: ${self:custom.containerOverrideName}
    ECS_TASK_VPC_SUBNET_1: ${self:custom.ecsTaskVpcSubnet1}
    ECS_TASK_VPC_SUBNET_2: ${self:custom.ecsTaskVpcSubnet2}
    OUTPUT_S3_PATH: ${self:custom.thumbnails_path}
    OUTPUT_S3_AWS_REGION: ${self:custom.currentRegion}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - ecs:RunTask
      Resource: "*"
    - Effect: Allow
      Action:
        - iam:PassRole
      Resource: ${self:custom.execRoleArn}
    - Effect: "Allow"
      Action:
        - s3:GetObject
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  triggerOnUploadVideo:
    handler: bin/triggerOnUploadVideo
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .mp4
  triggerOnThumbailCreation:
    handler: bin/triggerOnThumbnailCreation
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${self:custom.thumbnails_folder}/
            - suffix: .png
